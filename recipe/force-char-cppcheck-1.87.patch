diff --git a/cli/cppcheckexecutor.cpp b/cli/cppcheckexecutor.cpp
index 82cc960cb..a8f51013b 100644
--- a/cli/cppcheckexecutor.cpp
+++ b/cli/cppcheckexecutor.cpp
@@ -822,8 +822,9 @@ int CppCheckExecutor::check_internal(CppCheck& cppcheck, int /*argc*/, const cha
         const std::list<ErrorLogger::ErrorMessage::FileLocation> callstack;
         const std::string msg("Failed to load " + std::string(!std ? "std.cfg" : !posix ? "posix.cfg" : "windows.cfg") + ". Your Cppcheck installation is broken, please re-install.");
 #ifdef CFGDIR
+        std::string cfgdir = std::string(CFGDIR).c_str();
         const std::string details("The Cppcheck binary was compiled with CFGDIR set to \"" +
-                                  std::string(CFGDIR) + "\" and will therefore search for "
+                                  cfgdir + "\" and will therefore search for "
                                   "std.cfg in that path.");
 #else
         const std::string cfgfolder(Path::fromNativeSeparators(Path::getPathFromFilename(argv[0])) + "cfg");
diff --git a/gui/mainwindow.cpp b/gui/mainwindow.cpp
index 78439ae3f..d49cbfffd 100644
--- a/gui/mainwindow.cpp
+++ b/gui/mainwindow.cpp
@@ -747,7 +747,8 @@ Library::Error MainWindow::loadLibrary(Library *library, const QString &filename
 
 #ifdef CFGDIR
     // Try to load the library from CFGDIR..
-    const QString cfgdir = CFGDIR;
+    std::string stdcfgdir = std::string(CFGDIR).c_str();
+    const QString cfgdir(stdcfgdir);
     if (!cfgdir.isEmpty()) {
         ret = library->load(nullptr, (cfgdir+"/"+filename).toLatin1());
         if (ret.errorcode != Library::ErrorCode::FILE_NOT_FOUND)
diff --git a/gui/projectfiledialog.cpp b/gui/projectfiledialog.cpp
index 5381d1f93..0770f7867 100644
--- a/gui/projectfiledialog.cpp
+++ b/gui/projectfiledialog.cpp
@@ -77,7 +77,8 @@ ProjectFileDialog::ProjectFileDialog(ProjectFile *projectFile, QWidget *parent)
     const QString appPath = QFileInfo(applicationFilePath).canonicalPath();
     QSettings settings;
 #ifdef CFGDIR
-    const QString cfgdir = CFGDIR;
+    std::string stdcfgdir = std::string(CFGDIR).c_str();
+    const QString cfgdir(stdcfgdir);
 #endif
     const QString datadir = settings.value("DATADIR",QString()).toString();
     QStringList searchPaths;
diff --git a/lib/library.cpp b/lib/library.cpp
index e595f0c70..feffd862f 100644
--- a/lib/library.cpp
+++ b/lib/library.cpp
@@ -96,7 +96,8 @@ Library::Error Library::load(const char exename[], const char path[])
 
         std::list<std::string> cfgfolders;
 #ifdef CFGDIR
-        cfgfolders.push_back(CFGDIR);
+        std::string cfgdir = std::string(CFGDIR).c_str();
+        cfgfolders.push_back(cfgdir);
 #endif
         if (exename) {
             const std::string exepath(Path::fromNativeSeparators(Path::getPathFromFilename(exename)));
diff --git a/lib/platform.cpp b/lib/platform.cpp
index d9d2ec01c..ed489896d 100644
--- a/lib/platform.cpp
+++ b/lib/platform.cpp
@@ -166,7 +166,7 @@ bool cppcheck::Platform::loadPlatformFile(const char exename[], const std::strin
             filenames.push_back(Path::getPathFromFilename(Path::fromNativeSeparators(exename)) + "platforms/" + filename + ".xml");
         }
 #ifdef CFGDIR
-        std::string cfgdir = CFGDIR;
+        std::string cfgdir = std::string(CFGDIR).c_str();
         if (!cfgdir.empty() && cfgdir[cfgdir.size()-1] != '/')
             cfgdir += '/';
         filenames.push_back(cfgdir + ("../platforms/" + filename));
